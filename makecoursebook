#!/bin/bash
tmp=~/wa
getReg=false
init=false
thisDir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
mungFiles ()
{
    echo "" > $tmp/allFiles.tsv
    FILES=$tmp/*details.json
    for f in $FILES
    do
	#	echo "Working on $f"
	jq  --raw-output 'include {"search","~/WISE-Tools/makeCourseBook.jq"};' $f >> allFiles.tsv
	
    done
    exit
    cat $tmp/allFiles.tsv | ftfy -g >  $tmp/textfile.txt
	# Cleanup tags as best we can
#
	sed -i'.bak' "/cancelled/d" $tmp/textfile.txt
	sed -i'.bak' "/Membership/d" $tmp/textfile.txt
	sed -i'.special' "/special/d" $tmp/textfile.txt
	sed -i'.annual' "/annual meeting/d" $tmp/textfile.txt
#
	sed -i'.bak' -e "$(sed 's:.*:s/\\t&\\b//g:' $thisDir/Island.of.Unwanted.Tags.txt)" $tmp/textfile.txt
	echo "" > $tmp/mumble.txt
	#	awk -F "\t"  '{for(i=2; i<=NF; i++) printf "%s \t", $i}{printf "%s\n", $1}' $tmp/textfile.txt >> $tmp/mumble.txt
	awk -F "\t"  '{for(i=2; i<=NF; i++) printf "%s\t%s\n", $i,$1}' $tmp/textfile.txt >> $tmp/mumble.txt
	sed -i'.bak' '/^$/d' $tmp/mumble.txt
	cat $tmp/mumble.txt  | uniq | sed 's/^\(.\)/\U\1/' > $tmp/course.tags.txt
	# Fix case for selected tags
	sed -i'.bak' 's/Cwi/CWI/gi' $tmp/course.tags.txt
	cp $thisDir/course.header.html $tmp/past.wise.courses.html
	thisDate=$(date  +"%B %d, %Y %-I:%M %p")
	echo "<p>Updated: $thisDate<p>" >> $tmp/past.wise.courses.html
	datamash -s -g 1  collapse 2 < $tmp/course.tags.txt |
	    sed -e  's/\t\|,\([A-D,S]\)/<li>\1/g'|\
	    sed G |\
	    perl -pe 's|^(.*?)<li>|</p></div><div class="column" onclick="openTabOPEN$1CLOSE\;" style="background:white;">$1</div><div class="containerTab" style="display:none;background:white;"id="$1"><p>|g' |\
	    perl -pe 's|\(.*?\)||g' >> $tmp/past.wise.courses.html
	sed -i'.bak' "s/OPEN\(.*\)CLOSE/\(\'\1\'\)/g" $tmp/past.wise.courses.html
#	echo "Is this trouble?"
	sed -i'.bak2' 's/<\/i>,/<\/i> /g' $tmp/past.wise.courses.html
	sed -i'.burp' 's/\<li>/<\/p><p>/g' $tmp/past.wise.courses.html
	sed -i'.bak' 's/[A-D,S][[:digit:]]\+[[:space:]]\?[-,.][[:space:]]\?//g' $tmp/past.wise.courses.html
	thisDate=$(date  +"%B %d, %Y %-I:%m %p")
	echo "<p>Updated: $thisDate" >> $tmp/past.wise.courses.html
	cat $thisDir/course.footer.html >> $tmp/past.wise.courses.html
	recode utf8..ascii $tmp/past.wise.courses.html
}

msg()
{
    if [  "$verbose" = true ];
    then
#       echo "Verbose is $verbose"
        thisString=$@
        echo "%% $thisString"
    fi
}

set -eE -o functrace
failure() {
    local lineno=$1
    local msg=$2
    echo "Failed at $lineno: $msg"
}
trap 'failure ${LINENO} "$BASH_COMMAND"' ERR
start_time="$(date -u +%s)"
doBook()
{
    #
    echo "Doing $cmd"
}
doFlyer()
{
    #
    echo "Doing $cmd"
}
doList()
{
    #
    echo "Doing $cmd"
    mungFiles
}

while getopts "bfl" opt; do
    case ${opt} in
	b ) ### Make course book
	    cmd=Book
	    echo "do$cmd"
	    ;;
	f ) #3# Make flyer
	    cmd=Flyer
	    ;;
	l ) ### make course list
	    cmd=List
	    ;;
	\?) valid=0
            echo "An invalid option has been entered: $opt"
            ;;

        :)  valid=0
            echo "The additional argument for option $OPTARG was omitted."
            ;;
    esac 
done

do$cmd
